diff --git a/src/instructions/add_ship_escrow.rs b/src/instructions/add_ship_escrow.rs
index e9efbc5..13f8aad 100644
--- a/src/instructions/add_ship_escrow.rs
+++ b/src/instructions/add_ship_escrow.rs
@@ -17,8 +17,15 @@ pub struct AddShipEscrowInstructionAccounts {
     pub origin_token_account: solana_pubkey::Pubkey,
     pub ship: solana_pubkey::Pubkey,
     pub ship_escrow_token_account: solana_pubkey::Pubkey,
-    pub starbase_and_starbase_player: solana_pubkey::Pubkey,
-    pub game_accounts_and_profile: solana_pubkey::Pubkey,
+    // StarbaseAndStarbasePlayerMut expansion
+    pub starbase: solana_pubkey::Pubkey,
+    pub starbase_player: solana_pubkey::Pubkey,
+    // GameAndGameStateAndProfile expansion
+    pub key: solana_pubkey::Pubkey,
+    pub profile: solana_pubkey::Pubkey,
+    pub profile_faction: solana_pubkey::Pubkey,
+    pub game_id: solana_pubkey::Pubkey,
+    pub game_state: solana_pubkey::Pubkey,
     pub token_program: solana_pubkey::Pubkey,
     pub system_program: solana_pubkey::Pubkey,
 }
@@ -35,8 +42,18 @@ impl carbon_core::deserialize::ArrangeAccounts for AddShipEscrow {
         let origin_token_account = next_account(&mut iter)?;
         let ship = next_account(&mut iter)?;
         let ship_escrow_token_account = next_account(&mut iter)?;
-        let starbase_and_starbase_player = next_account(&mut iter)?;
-        let game_accounts_and_profile = next_account(&mut iter)?;
+
+        // StarbaseAndStarbasePlayerMut expansion
+        let starbase = next_account(&mut iter)?;
+        let starbase_player = next_account(&mut iter)?;
+
+        // GameAndGameStateAndProfile expansion
+        let key = next_account(&mut iter)?;
+        let profile = next_account(&mut iter)?;
+        let profile_faction = next_account(&mut iter)?;
+        let game_id = next_account(&mut iter)?;
+        let game_state = next_account(&mut iter)?;
+
         let token_program = next_account(&mut iter)?;
         let system_program = next_account(&mut iter)?;
 
@@ -46,8 +63,13 @@ impl carbon_core::deserialize::ArrangeAccounts for AddShipEscrow {
             origin_token_account,
             ship,
             ship_escrow_token_account,
-            starbase_and_starbase_player,
-            game_accounts_and_profile,
+            starbase,
+            starbase_player,
+            key,
+            profile,
+            profile_faction,
+            game_id,
+            game_state,
             token_program,
             system_program,
         })
diff --git a/src/instructions/invalidate_ship.rs b/src/instructions/invalidate_ship.rs
index 19e675d..0ed6453 100644
--- a/src/instructions/invalidate_ship.rs
+++ b/src/instructions/invalidate_ship.rs
@@ -10,7 +10,10 @@ pub struct InvalidateShip {
 
 #[derive(Debug, PartialEq, Eq, Clone, Hash, serde::Serialize, serde::Deserialize)]
 pub struct InvalidateShipInstructionAccounts {
-    pub game_and_profile: solana_pubkey::Pubkey,
+    // ActiveOrInactiveGameAndProfileMut expansion
+    pub key: solana_pubkey::Pubkey,
+    pub profile: solana_pubkey::Pubkey,
+    pub game_id: solana_pubkey::Pubkey,
     pub ship: solana_pubkey::Pubkey,
 }
 
@@ -21,11 +24,18 @@ impl carbon_core::deserialize::ArrangeAccounts for InvalidateShip {
         accounts: &[solana_instruction::AccountMeta],
     ) -> Option<Self::ArrangedAccounts> {
         let mut iter = accounts.iter();
-        let game_and_profile = next_account(&mut iter)?;
+
+        // ActiveOrInactiveGameAndProfileMut expansion
+        let key = next_account(&mut iter)?;
+        let profile = next_account(&mut iter)?;
+        let game_id = next_account(&mut iter)?;
+
         let ship = next_account(&mut iter)?;
 
         Some(InvalidateShipInstructionAccounts {
-            game_and_profile,
+            key,
+            profile,
+            game_id,
             ship,
         })
     }
diff --git a/src/instructions/remove_invalid_ship_escrow.rs b/src/instructions/remove_invalid_ship_escrow.rs
index 42fe051..70737b5 100644
--- a/src/instructions/remove_invalid_ship_escrow.rs
+++ b/src/instructions/remove_invalid_ship_escrow.rs
@@ -12,13 +12,20 @@ pub struct RemoveInvalidShipEscrow {
 
 #[derive(Debug, PartialEq, Eq, Clone, Hash, serde::Serialize, serde::Deserialize)]
 pub struct RemoveInvalidShipEscrowInstructionAccounts {
-    pub game_accounts_and_profile: solana_pubkey::Pubkey,
+    // GameAndGameStateAndProfile expansion
+    pub key: solana_pubkey::Pubkey,
+    pub profile: solana_pubkey::Pubkey,
+    pub profile_faction: solana_pubkey::Pubkey,
+    pub game_id: solana_pubkey::Pubkey,
+    pub game_state: solana_pubkey::Pubkey,
     pub funds_to: solana_pubkey::Pubkey,
     pub sage_player_profile: solana_pubkey::Pubkey,
     pub destination_token_account: solana_pubkey::Pubkey,
     pub ship: solana_pubkey::Pubkey,
     pub ship_escrow_token_account: solana_pubkey::Pubkey,
-    pub starbase_and_starbase_player: solana_pubkey::Pubkey,
+    // StarbaseAndStarbasePlayerMut expansion
+    pub starbase: solana_pubkey::Pubkey,
+    pub starbase_player: solana_pubkey::Pubkey,
     pub token_program: solana_pubkey::Pubkey,
     pub system_program: solana_pubkey::Pubkey,
 }
@@ -30,24 +37,40 @@ impl carbon_core::deserialize::ArrangeAccounts for RemoveInvalidShipEscrow {
         accounts: &[solana_instruction::AccountMeta],
     ) -> Option<Self::ArrangedAccounts> {
         let mut iter = accounts.iter();
-        let game_accounts_and_profile = next_account(&mut iter)?;
+
+        // GameAndGameStateAndProfile expansion
+        let key = next_account(&mut iter)?;
+        let profile = next_account(&mut iter)?;
+        let profile_faction = next_account(&mut iter)?;
+        let game_id = next_account(&mut iter)?;
+        let game_state = next_account(&mut iter)?;
+
         let funds_to = next_account(&mut iter)?;
         let sage_player_profile = next_account(&mut iter)?;
         let destination_token_account = next_account(&mut iter)?;
         let ship = next_account(&mut iter)?;
         let ship_escrow_token_account = next_account(&mut iter)?;
-        let starbase_and_starbase_player = next_account(&mut iter)?;
+
+        // StarbaseAndStarbasePlayerMut expansion
+        let starbase = next_account(&mut iter)?;
+        let starbase_player = next_account(&mut iter)?;
+
         let token_program = next_account(&mut iter)?;
         let system_program = next_account(&mut iter)?;
 
         Some(RemoveInvalidShipEscrowInstructionAccounts {
-            game_accounts_and_profile,
+            key,
+            profile,
+            profile_faction,
+            game_id,
+            game_state,
             funds_to,
             sage_player_profile,
             destination_token_account,
             ship,
             ship_escrow_token_account,
-            starbase_and_starbase_player,
+            starbase,
+            starbase_player,
             token_program,
             system_program,
         })
diff --git a/src/instructions/remove_ship_escrow.rs b/src/instructions/remove_ship_escrow.rs
index f9f0ddd..fc274f2 100644
--- a/src/instructions/remove_ship_escrow.rs
+++ b/src/instructions/remove_ship_escrow.rs
@@ -12,13 +12,20 @@ pub struct RemoveShipEscrow {
 
 #[derive(Debug, PartialEq, Eq, Clone, Hash, serde::Serialize, serde::Deserialize)]
 pub struct RemoveShipEscrowInstructionAccounts {
-    pub game_accounts_and_profile: solana_pubkey::Pubkey,
+    // GameAndGameStateAndProfile expansion
+    pub key: solana_pubkey::Pubkey,
+    pub profile: solana_pubkey::Pubkey,
+    pub profile_faction: solana_pubkey::Pubkey,
+    pub game_id: solana_pubkey::Pubkey,
+    pub game_state: solana_pubkey::Pubkey,
     pub funds_to: solana_pubkey::Pubkey,
     pub sage_player_profile: solana_pubkey::Pubkey,
     pub destination_token_account: solana_pubkey::Pubkey,
     pub ship: solana_pubkey::Pubkey,
     pub ship_escrow_token_account: solana_pubkey::Pubkey,
-    pub starbase_and_starbase_player: solana_pubkey::Pubkey,
+    // StarbaseAndStarbasePlayerMut expansion
+    pub starbase: solana_pubkey::Pubkey,
+    pub starbase_player: solana_pubkey::Pubkey,
     pub token_program: solana_pubkey::Pubkey,
     pub system_program: solana_pubkey::Pubkey,
 }
@@ -30,24 +37,40 @@ impl carbon_core::deserialize::ArrangeAccounts for RemoveShipEscrow {
         accounts: &[solana_instruction::AccountMeta],
     ) -> Option<Self::ArrangedAccounts> {
         let mut iter = accounts.iter();
-        let game_accounts_and_profile = next_account(&mut iter)?;
+
+        // GameAndGameStateAndProfile expansion
+        let key = next_account(&mut iter)?;
+        let profile = next_account(&mut iter)?;
+        let profile_faction = next_account(&mut iter)?;
+        let game_id = next_account(&mut iter)?;
+        let game_state = next_account(&mut iter)?;
+
         let funds_to = next_account(&mut iter)?;
         let sage_player_profile = next_account(&mut iter)?;
         let destination_token_account = next_account(&mut iter)?;
         let ship = next_account(&mut iter)?;
         let ship_escrow_token_account = next_account(&mut iter)?;
-        let starbase_and_starbase_player = next_account(&mut iter)?;
+
+        // StarbaseAndStarbasePlayerMut expansion
+        let starbase = next_account(&mut iter)?;
+        let starbase_player = next_account(&mut iter)?;
+
         let token_program = next_account(&mut iter)?;
         let system_program = next_account(&mut iter)?;
 
         Some(RemoveShipEscrowInstructionAccounts {
-            game_accounts_and_profile,
+            key,
+            profile,
+            profile_faction,
+            game_id,
+            game_state,
             funds_to,
             sage_player_profile,
             destination_token_account,
             ship,
             ship_escrow_token_account,
-            starbase_and_starbase_player,
+            starbase,
+            starbase_player,
             token_program,
             system_program,
         })
diff --git a/src/instructions/update_ship.rs b/src/instructions/update_ship.rs
index e995885..8e8446e 100644
--- a/src/instructions/update_ship.rs
+++ b/src/instructions/update_ship.rs
@@ -12,7 +12,10 @@ pub struct UpdateShip {
 
 #[derive(Debug, PartialEq, Eq, Clone, Hash, serde::Serialize, serde::Deserialize)]
 pub struct UpdateShipInstructionAccounts {
-    pub game_and_profile: solana_pubkey::Pubkey,
+    // ActiveOrInactiveGameAndProfile expansion
+    pub key: solana_pubkey::Pubkey,
+    pub profile: solana_pubkey::Pubkey,
+    pub game_id: solana_pubkey::Pubkey,
     pub ship: solana_pubkey::Pubkey,
 }
 
@@ -23,11 +26,18 @@ impl carbon_core::deserialize::ArrangeAccounts for UpdateShip {
         accounts: &[solana_instruction::AccountMeta],
     ) -> Option<Self::ArrangedAccounts> {
         let mut iter = accounts.iter();
-        let game_and_profile = next_account(&mut iter)?;
+
+        // ActiveOrInactiveGameAndProfile expansion
+        let key = next_account(&mut iter)?;
+        let profile = next_account(&mut iter)?;
+        let game_id = next_account(&mut iter)?;
+
         let ship = next_account(&mut iter)?;
 
         Some(UpdateShipInstructionAccounts {
-            game_and_profile,
+            key,
+            profile,
+            game_id,
             ship,
         })
     }
diff --git a/src/instructions/update_ship_escrow.rs b/src/instructions/update_ship_escrow.rs
index 4fa2292..86bf4f5 100644
--- a/src/instructions/update_ship_escrow.rs
+++ b/src/instructions/update_ship_escrow.rs
@@ -14,8 +14,12 @@ pub struct UpdateShipEscrow {
 pub struct UpdateShipEscrowInstructionAccounts {
     pub old_ship: solana_pubkey::Pubkey,
     pub next: solana_pubkey::Pubkey,
-    pub starbase_and_starbase_player: solana_pubkey::Pubkey,
-    pub game_accounts: solana_pubkey::Pubkey,
+    // StarbaseAndStarbasePlayerMut expansion
+    pub starbase: solana_pubkey::Pubkey,
+    pub starbase_player: solana_pubkey::Pubkey,
+    // GameAndGameState expansion
+    pub game_id: solana_pubkey::Pubkey,
+    pub game_state: solana_pubkey::Pubkey,
 }
 
 impl carbon_core::deserialize::ArrangeAccounts for UpdateShipEscrow {
@@ -27,14 +31,22 @@ impl carbon_core::deserialize::ArrangeAccounts for UpdateShipEscrow {
         let mut iter = accounts.iter();
         let old_ship = next_account(&mut iter)?;
         let next = next_account(&mut iter)?;
-        let starbase_and_starbase_player = next_account(&mut iter)?;
-        let game_accounts = next_account(&mut iter)?;
+
+        // StarbaseAndStarbasePlayerMut expansion
+        let starbase = next_account(&mut iter)?;
+        let starbase_player = next_account(&mut iter)?;
+
+        // GameAndGameState expansion
+        let game_id = next_account(&mut iter)?;
+        let game_state = next_account(&mut iter)?;
 
         Some(UpdateShipEscrowInstructionAccounts {
             old_ship,
             next,
-            starbase_and_starbase_player,
-            game_accounts,
+            starbase,
+            starbase_player,
+            game_id,
+            game_state,
         })
     }
 }
